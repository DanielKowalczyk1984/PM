
stages:
  - ðŸ”¨ build

cache:
  key: one-key-to-rule-them-all
  paths:
    - ThirdParty/
  when: 'always'

.build:linux:base:
  stage: ðŸ”¨ build
  image: ubuntu:21.10
  variables:
    BUILDDIR: "build"
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - apt-get update && apt-get install -y locales && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
    - export LANG=en_US.utf8
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get --no-install-recommends -y install gpg-agent software-properties-common dirmngr apt-transport-https lsb-release ca-certificates
    - add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - apt-get --no-install-recommends -y install ${BB_CI_CC_COMPILER} ${BB_CI_CXX_COMPILER} clang-format libssl-dev git gcc g++ wget curl make ninja-build pkg-config python3 python3-pip tar unzip zip
    - pip install -U cmake-format
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - chmod u+x before_script.sh
    - ./before_script.sh
  script:
    - mkdir -p ${BUILDDIR}
    - cmake -DCMAKE_C_COMPILER=${BB_CI_CC_COMPILER} -DCMAKE_CXX_COMPILER=${BB_CI_CXX_COMPILER} -DCMAKE_BUILD_TYPE=Release -B ${BUILDDIR} -S . -DCMAKE_TOOLCHAIN_FILE=./ThirdParty/vcpkg/scripts/buildsystems/vcpkg.cmake
    - cmake --build ${BUILDDIR}
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    when: "on_failure"
    paths:
      - ${BUILDDIR}/
    expire_in: 5 days


build:linux:gcc:
  extends: .build:linux:base
  variables:    
    BB_CI_CXX_COMPILER: "g++-11"
    BB_CI_CC_COMPILER: "gcc-11"


build:linux:clang:
  extends: .build:linux:base
  variables:    
    BB_CI_CXX_COMPILER: "clang++-13"
    BB_CI_CC_COMPILER: "clang-13"



