
stages:
  - ðŸ”¨ build

.build:linux:base:
  stage: ðŸ”¨ build
  image: ubuntu:latest
  variables:
    BUILDDIR: "build"
  before_script:
    - apt-get update && apt-get install -y locales && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
    - export LANG=en_US.utf8
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get --no-install-recommends -y install ${BB_CI_CC_COMPILER} ${BB_CI_CXX_COMPILER} clang-format gcc g++ git cmake wget curl make ninja-build pkg-config python3 python3-pip tar unzip zip
    - pip install -U cmake-format
    - git clone https://github.com/Microsoft/vcpkg.git
    - ./vcpkg/bootstrap-vcpkg.sh --useSystemBinaries
    - ./vcpkg/vcpkg install range-v3 fmt boost-chrono boost-timer
  script:
    - mkdir -p ${BUILDDIR}
    - CC=${BB_CI_CC_COMPILER} CXX=${BB_CI_CXX_COMPILER} cmake -B ${BUILDDIR} -S . -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake 
    - cmake --build ${BUILDDIR}
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ${BUILDDIR}/
    expire_in: 5 days


build:linux:gcc:
  extends: .build:linux:base
  variables:    
    BB_CI_CXX_COMPILER: "g++-10"
    BB_CI_CC_COMPILER: "gcc-10"


build:linux:clang:
  extends: .build:linux:base
  variables:    
    BB_CI_CXX_COMPILER: "clang++-10"
    BB_CI_CC_COMPILER: "clang-10"



